library(Seurat)
library(cowplot)
library(harmony)

counts = Matrix::readMM("GSE158055/matrix.mtx")
features = read.csv("GSE158055/features.tsv.gz", sep="\t", head=F)$V1
groups = read.csv("GSE158055/groups.tsv", sep="\t", head=F)$V1
barcodes = read.csv("GSE158055/barcodes.tsv", sep="\t", head=F)$V1
colnames(counts) = barcodes
rownames(counts) = features
samples = substring(barcodes, 1, 4)
pbmc <-  CreateSeuratObject(counts = counts, min.cell=10)
pbmc <- PercentageFeatureSet(pbmc, pattern = "^MT-", col.name = "percent.mt")
pbmc <- PercentageFeatureSet(pbmc, pattern = "^RP[SL]", col.name = "percent.rp")

pbmc@meta.data$sample = factor(samples, levels=names(batchs))
pbmc@meta.data$group = factor(groups, levels=c("HD", "SD", "LD"))

batchs = lapply(pbmc@meta.data$sample, function(x) {return(batchs[x])})
pbmc@meta.data$batch = batchs
rm(counts)
pbmc = Seurat::NormalizeData(pbmc, verbose = FALSE) %>%
    FindVariableFeatures(selection.method = "vst", nfeatures = 3000) %>%
    ScaleData(verbose = FALSE,vars.to.regress=c("nCount_RNA", "percent.mt", "percent.rp"))


mt_gene = c('MT-ND1','MT-ND2', 'MT-CO1', 'MT-CO2', 'MT-ATP8', 'MT-ATP6', 'MT-CO3', 'MT-ND3',
    'MT-ND4L', 'MT-ND4', 'MT-ND5', 'MT-ND6', 'MT-CYB')
rp_gene = c(
    'RPL22', 'RPL11', 'RPS8', 'RPL5', 'RPS27', 'RPS7', 'RPS27A', 'RPL31', 'RPL37A', 'RPL32',
    'RPL15', 'RPSA', 'RPL14', 'RPL29', 'RPL24', 'RPL35A', 'RPL9', 'RPL34', 'RPS3A', 'RPL37',
    'RPS23', 'RPS14', 'RPS18', 'RPS10', 'RPL10A', 'RPS12', 'RPS4X', 'RPL36A', 'RPL39', 'RPL10',
    'RPS20', 'RPL7', 'RPL30', 'RPL8', 'RPS6', 'RPL35', 'RPL12', 'RPL7A', 'RPLP2', 'RPL27A',
    'RPS13', 'RPS3', 'RPS25', 'RPS24', 'RPS26', 'RPL41', 'RPL6', 'RPLP0', 'RPL21', 'RPL10L',
    'RPS29', 'RPL4', 'RPLP1', 'RPS17', 'RPS2', 'RPS15A', 'RPL13', 'RPL26', 'RPL23A', 'RPL23',
    'RPL19', 'RPL27', 'RPL38', 'RPL17-C18orf32', 'RPL17', 'RPS21', 'RPS15', 'RPL36', 'RPS28', 'RPL18A',
    'RPS16', 'RPS19', 'RPL18', 'RPL13A', 'RPS11', 'RPS9', 'RPL28', 'RPS5', 'RPS4Y1', 'RPS4Y2', 'RPL3')
var.genes = VariableFeatures(pbmc)
var.genes = setdiff(var.genes, c(mt_gene, rp_gene))
pbmc = RunPCA(pbmc, features=var.genes, npcs = 30, verbose = FALSE)
pbmc <- pbmc %>%
    RunHarmony(c("sample"), plot_convergence = TRUE)
pbmc <- pbmc %>%
    RunUMAP(reduction = "harmony", dims = 1:30) %>%
    FindNeighbors(reduction = "harmony", dims = 1:30) %>%
    FindClusters(resolution = 1) %>%
    identity()

DimPlot(pbmc, reduction = "umap", label=T)
markers = c("CD3D", "CD3E", "CD4","CCR7",  "TCF7", "CCR6", "FOXP3", "CD8A", "GZMK", "GZMH", "TRGV9","SLC4A10", "MKI67",
            "KLRF1", "CD79A", "IGHD", "CD27", "MZB1", "LYZ", "CD14", "FCGR3A", "CD1C", "CLEC4C", "PPBP", "CD34")
DotPlot(pbmc, features =markers) + NoLegend() +
    theme(text = element_text(size=20),
    axis.text.x = element_text(angle=90, hjust=1))
t_clusters = c(1,3,4,5,7,8,9,11,12,14,15,17, 18, 22, 23,24,25,27,32)
t = subset(pbmc, subset=seurat_clusters %in% t_clusters)
t <- t %>%
    RunUMAP(reduction = "harmony", dims = 1:30) %>%
    FindNeighbors(reduction = "harmony", dims = 1:30) %>%
    FindClusters(resolution = 1) %>%
    identity()
DimPlot(t, reduction = "umap", label=T)
cluster_name = data.frame(
    cluster=c(0:13),
        cell.type=c( "Naive CD4 T", "Cytotoxic T", "NKT", "Naive CD8 T", "gdT", "Naive CD4 T", "Naive CD8 T", "Memory CD4 T", "Memory CD8 T", "Treg",
                "Naive CD4 T", "Naive CD4 T", "Proliferative T", "Naive CD8 T"
               )
)
rename_cluster <- function(object, new_df, name) {
    p = c()
    for (i in object@meta.data$seurat_clusters) {
        p = c(p, as.character(new_df[new_df$cluster==i,][name][1,]))
    }
    object@meta.data[name] = as.factor(p)
    return(object)
}

t = rename_cluster(t,cluster_name, "cell.type")
my_levels = c("Naive CD4 T", "Memory CD4 T", "Treg",  "Naive CD8 T", "Memory CD8 T", "Cytotoxic T", "gdT","Proliferative T", "NKT")
t@meta.data$cell.type = factor(x = t@meta.data$cell.type, levels = my_levels)
saveRDS(t, "data/singlecell_GSE158055.RDS")